/*
 * Copyright (c) 2008, Carnegie Mellon University
 *     This software is distributed under the terms of the 
 *     Simplified BSD License (see tdl/LICENSE.TXT)
 */

#define SERVER_AGENT "ServerAgent"
#define CLIENT_AGENT "ClientAgent"

distributed goal foo(char * theString ) with format "{string}"
{
  cout << "TEST foo: \"" << theString << "\"\n" << flush;
}

goal test()
{
  spawn foo("arg1") with on SERVER_AGENT;
}


void
clientSide( u_int4 theProcessIndex )
{
  MARKUSED ( theProcessIndex );
  cout << "clientSide/stdout\n";
  cerr << "clientSide/stderr\n";
  TDL_Initialize ( FALSE, CLIENT_AGENT );
  TDL_Initialize ( TRUE );
  TDL_Initialize ( FALSE );
  sleep(2);
  test();
  sleep(1);
  cout << "clientSide ending.\n";
}

void
serverSide ( u_int4 theProcessIndex )
{
  MARKUSED ( theProcessIndex );
  cout << "serverSide/stdout\n";
  cerr << "serverSide/stderr\n";
  TDL_Initialize ( SERVER_AGENT, FALSE );
  sleep(1);
  TCM_ProcessAgenda(TRUE, 4000);
  cout << "serverSide ending.\n";
}


int
main ( int argc, char * argv[] )
{
  TDL_ForkChildren ( serverSide, clientSide, 5000, 999,
		     TO_BOOLEAN ( argc > 1 ) );

	/* Make sure all of these work (link/compile)... */
  if ( FALSE )
  {
    TDL_Initialize ( );

    TDL_Initialize ( FALSE );
    TDL_Initialize ( "HOST" );

    TDL_Initialize ( FALSE, FALSE );
    TDL_Initialize ( "HOST", "HOST" );

    TDL_Initialize ( FALSE, "HOST" );
    TDL_Initialize ( "HOST", FALSE );

    TDL_Initialize ( FALSE, FALSE, "HOST" );
    TDL_Initialize ( "HOST", FALSE, FALSE );

    TDL_Initialize ( "HOST", "HOST", FALSE );
    TDL_Initialize ( FALSE, "HOST", "HOST" );

    TDL_Initialize ( "HOST", "HOST", FALSE, FALSE );
    TDL_Initialize ( FALSE, FALSE, "HOST", "HOST" );
  }
}

