/*
 * Copyright (c) 2008, Carnegie Mellon University
 *     This software is distributed under the terms of the 
 *     Simplified BSD License (see tdl/LICENSE.TXT)
 */

#define SERVER_AGENT "ServerAgent"
#define CLIENT_AGENT "ClientAgent"

distributed goal foo()
{
  cout << "TEST foo()\n" << flush;
}

distributed goal foo(int i)
{
  cout << "TEST foo(int i=" << i << ")\n" << flush;
}

distributed goal foo(STRING string)
{
  cout << "TEST foo(STRING string=\"" << string << "\")\n" << flush;
}

goal test()
{
  WITH ( on SERVER_AGENT )
  {
    SPAWN foo();
    SPAWN foo(1);
    SPAWN foo("stringtest");
  }

	/* Verify spawnAndWait is working correctly. */
  foo();
  foo(2);
  foo("stringtest2");

  spawn foo();
  spawn foo(3);
  spawn foo("stringtest3");
}


void
clientSide( u_int4 theProcessIndex )
{
  MARKUSED ( theProcessIndex );
  cout << "clientSide/stdout\n";
  cerr << "clientSide/stderr\n";
  TDL_Initialize ( FALSE, CLIENT_AGENT );
  TDL_Initialize ( TRUE );
  TDL_Initialize ( FALSE );
  sleep(2);
  test();
  sleep(1);
  cout << "clientSide ending.\n";
}

void
serverSide ( u_int4 theProcessIndex )
{
  MARKUSED ( theProcessIndex );
  cout << "serverSide/stdout\n";
  cerr << "serverSide/stderr\n";
  TDL_Initialize ( SERVER_AGENT, FALSE );
  sleep(1);
  TCM_ProcessAgenda(4000);
  cout << "serverSide ending.\n";
}


int
main ( int argc, char * argv[] )
{
  TDL_ForkChildren ( serverSide, clientSide, 5000, 999,
		     TO_BOOLEAN ( argc > 1 ) );
}
