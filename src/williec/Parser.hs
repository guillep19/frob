module Parser where


import UU.Parsing
import UU.Scanner

import Lexer
--import UU.Scanner.TokenParser
--import UU.Scanner.GenTokenOrd()
--import UU.Scanner.GenTokenSymbol()
--import UU.Scanner.TokenShow()
--import UU.Scanner.Position
--import Control.Monad

import AttributeGrammar


type TokenParser a = Parser Token a

-- Parser with starting nonterminal Root
-- Semantic functions generated by UUAG
pRoot :: TokenParser Root
pRoot
  = (\x -> Root_Root x []) <$> pDecls

pDecls :: TokenParser Decls
pDecls
  = pList pDecl

pDecl :: TokenParser Decl
pDecl
  = (\x _ y -> Decl_Function x y) <$> pVarid <*> pKey "=" <*> pVarid
    <|> (\x _ y -> Decl_Const x y) <$> pConid <*> pKey "=" <*> pVarid
