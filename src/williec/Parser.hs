module Parser where

--import Text.ParserCombinators.UU.Core
import Text.ParserCombinators.UU.Derived
--import Text.ParserCombinators.UU.BasicInstances

import UU.Parsing
--import UU.Scanner.TokenParser
--import UU.Scanner.GenTokenOrd()
--import UU.Scanner.GenTokenSymbol()
--import UU.Scanner.TokenShow()
--import UU.Scanner.Position

import AttributeGrammar
import Tokens

-- Parser with starting nonterminal Root
-- Semantic functions generated by UUAG
pRoot :: Parser Token T_Root
pRoot
  = sem_Root_Root <$> pDecls

pDecls :: Parser Token T_Decls
pDecls
  = pFoldr_gr (sem_Decls_Cons, sem_Decls_Nil) pDecl

pDecl :: Parser Token T_Decl
pDecl
  =   sem_Decl_Function <$> pVarname <*> pMany pVarname <* pSym T_Eq *> pVarname
  <|> sem_Decl_Const <$> pConstname <* pSym T_Eq *> pVarname

pVarname :: Parser Token String
pVarname = varname <$> pSym T_Identifier

pConstname :: Parser Token String
pConstname = constname <$> pSym T_Constant
