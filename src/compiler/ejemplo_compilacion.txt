

suma a b = a + b

suma = \a -> (\b -> a + b)


suma5 = suma 5

suma5 = (\a -> (\b -> a + b)) [a = 5]


suma a b = a + b


//suma:
   load_param 0
   load_param 1
   add
   ret

//


DISTANCE = 0
LED = 1

fruta dist = if (dist > 50) then 234 else 123
fruta = (\dist -> if (dist > 50) then 234 else 123)

do {
  distancia <- read (frula 2)
  signal_frula <- (fruta) distancia
  output LED signal_frula
}

//DISTANCE:
   push 0
   ret

call DISTANCE
read 0

    make_call fun argument
    ret

fruta:
   load_argument 0
 

suma = (\a -> (\b -> a + b))

main = ((suma 2) 3)

Computation = (Computacion, Env)

//main:
  push 3                       Env = [fun=id, args=3]
  push_env                     Env = [] -> [fun=id, args=3]
  push 2                       Env = [fun=id, args=[2]] -> [fun=id, args=3]
  call suma                    Env = [(fun=suma, args=(fun=id args=2))] -> [
  make_call suma               Push (Fun=suma, Env=(Fun=[id], Env=(2)))
  ret

(fun=(fun=suma, args=2), args=3)

 push 3
 wrap
 eval


